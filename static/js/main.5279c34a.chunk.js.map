{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onAddfeedback","map","key","className","s","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","addFeedback","e","target","setState","prevState","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Object","keys","React","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"2PAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCAAE,6BAAKD,IACH,8BAAMC,Q,gBCKHC,EARS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAZ,OACpB,6BACKD,EAAQE,KAAI,SAAAC,GAAG,OACZ,6BACI,wBAAQC,UAAWC,IAAEC,OAAQC,KAAK,SAASC,KAAML,EAAKM,QAASR,EAA/D,SAA+EE,KAD1EA,SCiBNO,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,gCAAK,uCAAUJ,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCGGC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mCACI,4BAAIA,OCEKC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAc,SAAAC,GACZ,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAAAC,GAAS,sBACtBhB,EAAOgB,EAAUhB,GAAQ,O,mEAIN,IAAD,EACYiB,KAAKN,MAEpC,OAHmB,EACXR,KADW,EACLC,QADK,EACIC,M,wDAMvB,IAAMC,EAAQW,KAAKC,qBACbf,EAASc,KAAKN,MAAdR,KACR,OAAOgB,KAAKC,MAAMjB,EAAOG,EAAQ,O,+BAGvB,IAAD,EACwBW,KAAKN,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQW,KAAKC,qBACfX,EAAqBU,KAAKI,kCAC1B,OACC,qCACA,cAAC,EAAD,CAAShC,MAAM,2BAAf,SACC,cAAC,EAAD,CACEG,QAAS8B,OAAOC,KAAKN,KAAKN,OAC1BlB,cAAewB,KAAKL,gBAGlB,cAAC,EAAD,CAASvB,MAAM,aAAf,SACW,IAAViB,EAAe,cAAC,EAAD,CAAcG,QAAQ,sBACtC,cAAC,EAAD,CACPN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA7CMiB,IAAMC,WCHvCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W,kBCJhDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.5279c34a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <><h2>{title}</h2>\r\n            <div>{children}\r\n            </div></>\r\n\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onAddfeedback }) => (\r\n    <ul>\r\n        {options.map(key => (\r\n            <li key={key}>\r\n                <button className={s.button} type=\"button\" name={key} onClick={onAddfeedback}>{key}</button>\r\n            </li>))}\r\n    </ul>)\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <div><p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage} %</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n        </>\r\n    );\r\n};\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport Section from './components/Section/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification';\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  addFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prevState => ({\r\n    [name]: prevState[name] + 1\r\n    }))\r\n  }\r\n  \r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total\r\n\t\t }\r\n  \r\n  countPositiveFeedbackPercentage() {\r\n    const total = this.countTotalFeedback();\r\n\t\tconst { good } = this.state;\r\n\t\treturn Math.round(good / total * 100);\r\n\t\t}\r\n   \r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\r\n        return (\r\n         <> \r\n         <Section title=\"Gib ihm, Bratan, gib ihm\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onAddfeedback={this.addFeedback}\r\n          />\r\n            </Section> \r\n              <Section title=\"Statistics\"> \r\n              {total === 0 ? (<Notification message=\"No feedback given\" />) :\r\n             (<Statistics\r\n\t\t\t\t\t\t\tgood={good}\r\n\t\t\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\t\t\tbad={bad}\r\n\t\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\r\n\t\t\t\t\t\t/>)}\r\n\t\t\t\t\t  </Section> \r\n            </>\r\n        )\r\n    }\r\n}","import ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__xPBhm\"};"],"sourceRoot":""}